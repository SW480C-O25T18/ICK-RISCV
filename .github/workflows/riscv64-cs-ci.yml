name: RISC-V 64 Context Switching CI

on:
  push:
    branches: [ "7-port-arch-contextadb" ]
  pull_request:
    branches: [ "7-port-arch-contextadb" ]

jobs:
  build-test-riscv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Cache system dependencies (GNAT, QEMU, GPRbuild)
      - name: Cache System Dependencies
        id: cache-apt
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: apt-${{ runner.os }}-${{ hashFiles('.github/workflows/riscv64-ci.yml') }}
          restore-keys: |
            apt-${{ runner.os }}-

      - name: Install GNAT, GPRbuild, and Dependencies (if cache miss)
        if: steps.cache-apt.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install -y git qemu-system-misc qemu-user wget xz-utils unzip curl

      # Cache Alire installation
      - name: Cache Alire
        id: cache-alire
        uses: actions/cache@v4
        with:
          path: ~/.config/alire
          key: alire-${{ runner.os }}-${{ hashFiles('alire.toml') }}
          restore-keys: |
            alire-${{ runner.os }}-

      - name: Install Alire
        uses: alire-project/setup-alire@v4
        with:
          version: "2.0.2"
          toolchain: "gnat_native gprbuild"
          cache: true

      # Cache Alire package dependencies
      - name: Cache Alire Dependencies
        id: cache-alr-deps
        uses: actions/cache@v4
        with:
          path: ~/.config/alire/cache
          key: alr-deps-${{ runner.os }}-${{ hashFiles('alire.toml') }}
          restore-keys: |
            alr-deps-${{ runner.os }}-

      - name: Install Dependencies with Alire (if cache miss)
        if: steps.cache-alr-deps.outputs.cache-hit != 'true'
        run: |
          alr update
          alr install

      - name: Verify SPARK Proofs
        run: |
          alr exec -- gnatprove -P source/arch/riscv64-limine/arch-context.gpr --mode=prove --level=3

      - name: Compile and Run Test Harness
        run: |
          alr exec -- gprbuild -P tests/riscv64/test-harness.gpr
          qemu-system-riscv64 -machine virt -cpu rv64 -nographic -kernel bin/test-harness

      - name: Upload Test Logs as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: riscv64-test-logs
          path: tests/test-log.txt

      - name: Validate Test Output and Track History
        id: test_results
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "Test Run on: $TIMESTAMP (Commit: $COMMIT_HASH)" >> tests/test-history.log
          echo "----------------------------------------" >> tests/test-history.log
          cat tests/test-log.txt >> tests/test-history.log
          echo "" >> tests/test-history.log

          if ! grep -q "[PASSED]" tests/test-log.txt; then
            echo "failed=true" >> $GITHUB_ENV
          fi

      - name: Upload Test Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: riscv64-test-report
          path: tests/test-report.txt

      - name: Upload Test History as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: riscv64-test-history
          path: tests/test-history.log

      - name: Create GitHub Issue on Failure
        if: env.failed == 'true'
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "CI/CD Test Failure - RISC-V Context Switching"
          content-filepath: tests/test-report.txt
          labels: bug, ci-failure
          assignees: your-github-username
