name: RISC-V 64 Context Switching CI

on:
  push:
    branches: [ "7-port-arch-contextadb" ]
  pull_request:
    branches: [ "7-port-arch-contextadb" ]

jobs:
  build-test-riscv:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    outputs:
      test_status: ${{ steps.test_status_check.outputs.status }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          apt-get update
          apt-get install -y qemu-system-misc qemu-user wget xz-utils unzip git curl

      - name: Download and Install Alire
        run: |
          wget https://github.com/alire-project/alire/releases/download/v2.0.2/alr-2.0.2-bin-x86_64-linux.zip
          unzip alr-2.0.2-bin-x86_64-linux.zip -d alire

      - name: Verify Alire Installation
        run: |
          ./alire/bin/alr version

      - name: Install GPRBuild and GNAT with Alire
        run: |
          ./alire/bin/alr install gnat_native gprbuild

      - name: Download and Extract RISC-V Toolchain
        run: |
          wget https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2025.01.20/riscv64-elf-ubuntu-22.04-gcc-nightly-2025.01.20-nightly.tar.xz
          tar -xvf riscv64-elf-ubuntu-22.04-gcc-nightly-2025.01.20-nightly.tar.xz

      - name: Verify SPARK Proofs
        run: |
          ./alire/bin/gnatprove -P source/arch/riscv64-limine/arch-context.gpr --mode=prove --level=3

      - name: Compile and Run Test Harness
        id: test_run
        run: |
          ./alire/bin/gnatmake -f -gnat2012 tests/riscv64/test-harness.adb -o tests/riscv64/test-harness-riscv
          qemu-system-riscv64 -machine virt -cpu rv64 -nographic -kernel tests/riscv64/test-harness-riscv > tests/test-log.txt

      - name: Validate Test Output and Set Status
        id: test_status_check
        run: |
          if grep -q "[PASSED]" tests/test-log.txt; then
            echo "status=success" >> $GITHUB_ENV
          else
            echo "status=failure" >> $GITHUB_ENV
          fi

      - name: Upload Test Logs as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: riscv64-test-logs
          path: tests/test-log.txt

  set-commit-status:
    needs: build-test-riscv
    runs-on: ubuntu-latest  # Use normal runner, not container
    steps:
      - name: Set Commit Status
        run: |
          if [[ "${{ needs.build-test-riscv.outputs.test_status }}" == "success" ]]; then
            echo "::notice title=CI/CD Passed::All tests successful."
          else
            echo "::error title=CI/CD Failed::Tests did not pass."
            exit 1
          fi
