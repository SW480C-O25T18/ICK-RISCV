#  GNUmakefile.in: Standard-complying wrapper for gprbuild and install.
#  Copyright (C) 2023 streaksu
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Nuke built-in rules and variables
override MAKEFLAGS += -rR

# Import some autoconf variables as make variables
override SRCDIR          := @SRCDIR@
override BUILDDIR        := @BUILDDIR@
override PACKAGE_VERSION := @PACKAGE_VERSION@
override PACKAGE_TARNAME := @PACKAGE_TARNAME@
override OUTPUT          := $(PACKAGE_TARNAME)
override DIST_OUTPUT     := $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)

# Take care of reproducible dates.
override SOURCE_DATE_EPOCH := @SOURCE_DATE_EPOCH@
export SOURCE_DATE_EPOCH

# Autoconf dir variables.
override prefix      := @prefix@
override datarootdir := @datarootdir@
override infodir     := @infodir@
override docdir      := @docdir@

# Generator executables.
override MKDIR_P      := @MKDIR_P@
override INSTALL      := @INSTALL@
override INSTALL_DATA := @INSTALL_DATA@
override MAKEINFO     := @MAKEINFO@
override TEXI2HTML    := @TEXI2HTML@
override TEXI2DVI     := @TEXI2DVI@
override GPRBUILD     := @GPRBUILD@
override GNATPROVE    := @GNATPROVE@
override PERL         := @PERL@
override OBJDUMP      := @OBJDUMP@
override GZIP         := @GZIP@
override STRIP        := @STRIP@

# Target information.
override target_cpu    := @target_cpu@
override target_vendor := @target_vendor@
override target_full   := $(target_cpu)-$(target_vendor)

# Macros to make our build system still work from within paths with spaces
# or other special characters.
override SPACE := $(subst ,, )
MKESCAPE = $(subst $(SPACE),\ ,$(1))
SHESCAPE = $(subst ','\'',$(1))

# Max threads. MAX POWAHH
override PARALLELISM := $(shell nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null || psrinfo -tc 2>/dev/null || echo 1)
###############################################################################
# Rules for generating executables, documentation, and other artifacts.
.PHONY: all
all: $(OUTPUT) ironclad.info.gz

$(OUTPUT):
	$(GPRBUILD) -P '$(call SHESCAPE,$(BUILDDIR))'/rts.gpr -j$(PARALLELISM)
	$(GPRBUILD) --RTS='$(call SHESCAPE,$(BUILDDIR))'/rtsdir \
      -P '$(call SHESCAPE,$(BUILDDIR))'/ironclad.gpr -j$(PARALLELISM)

.PHONY: info
info: ironclad.info.gz

ironclad.info.gz: ironclad.info
	$(GZIP) -c '$(call SHESCAPE,$<)' > '$(call SHESCAPE,$@)'

ironclad.info: $(call MKESCAPE,$(SRCDIR))/docs/ironclad.texi
	$(MAKEINFO) '$(call SHESCAPE,$<)' -o '$(call SHESCAPE,$@)'

.PHONY: html
html: ironclad.html

ironclad.html: $(call MKESCAPE,$(SRCDIR))/docs/ironclad.texi
	$(TEXI2HTML) --set-customization-variable 'HIGHLIGHT_SYNTAX highlight' '$(call SHESCAPE,$<)' -o '$(call SHESCAPE,$@)'

.PHONY: dvi
dvi: ironclad.dvi

ironclad.dvi: $(call MKESCAPE,$(SRCDIR))/docs/ironclad.texi
	$(TEXI2DVI) '$(call SHESCAPE,$<)' -o '$(call SHESCAPE,$@)'
###############################################################################
# Rules for checks and formal verification.
.PHONY: check
check: checkstack prove

.PHONY: checkstack
checkstack: $(OUTPUT)
	$(OBJDUMP) -d $(OUTPUT) | $(PERL) '$(call SHESCAPE,$(SRCDIR))'/scripts/checkstack.pl ${target_full}

.PHONY: prove
prove:
	$(GNATPROVE) -U --prover=cvc4,altergo,z3 --mode=all --counterexamples=on \
		-j$(PARALLELISM) -P '$(call SHESCAPE,$(SRCDIR))'/ironclad.gpr
###############################################################################
# Rules for cleaning build and configuration artifacts
.PHONY: clean
clean:
	rm -rf $(OUTPUT) obj gnatprove '$(call SHESCAPE,$(SRCDIR))'/tests/obj      \
		'$(call SHESCAPE,$(SRCDIR))'/source/rts/obj                        \
		'$(call SHESCAPE,$(SRCDIR))'/source/rts/adalib                     \
		ironclad.info ironclad.html ironclad.dvi ironclad.log ironclad.toc \
		ironclad.aux ironclad.info.gz rtsdir/obj

# Remove files generated by configure.
.PHONY: distclean
distclean: clean
	rm -rf config.log config.status GNUmakefile ironclad.gpr rts.gpr rtsdir libgnat-hack

.PHONY: maintainer-clean
maintainer-clean: distclean
	cd '$(call SHESCAPE,$(SRCDIR))' && rm -rf configure build-aux *'~' autom4te.cache
###############################################################################
# Create a release tarball.
.PHONY: dist
dist:
	rm -rf "$(DIST_OUTPUT)"
	$(MKDIR_P) "$(DIST_OUTPUT)"
	cp -rp '$(call SHESCAPE,$(SRCDIR))'/.git "$(DIST_OUTPUT)"/
	cd "$(DIST_OUTPUT)" && git checkout .
	cd "$(DIST_OUTPUT)" && git log --decorate --use-mailmap > ChangeLog
	cd "$(DIST_OUTPUT)" && ./bootstrap
	rm -rf "$(DIST_OUTPUT)"/.git
	rm -rf "$(DIST_OUTPUT)"/.gitignore
	rm -rf "$(DIST_OUTPUT)"/.mailmap
	rm -rf "$(DIST_OUTPUT)"/autom4te.cache
	echo "$(PACKAGE_VERSION)" >"$(DIST_OUTPUT)"/version
	tar -zcf "$(DIST_OUTPUT)".tar.gz "$(DIST_OUTPUT)"
	rm -rf "$(DIST_OUTPUT)"
###############################################################################
# Install artifacts and other files to their final locations.
.PHONY: install
install: all
	$(INSTALL) -d '$(call SHESCAPE,$(DESTDIR)$(infodir))'
	$(INSTALL) -d '$(call SHESCAPE,$(DESTDIR)$(docdir))'
	$(INSTALL) -d '$(call SHESCAPE,$(DESTDIR)$(datarootdir))/$(PACKAGE_TARNAME)'
	$(INSTALL_DATA) $(OUTPUT) '$(call SHESCAPE,$(DESTDIR)$(datarootdir))/$(PACKAGE_TARNAME)/'
	$(INSTALL_DATA) ironclad.info.gz '$(call SHESCAPE,$(DESTDIR)$(infodir))/'

# Install and strip executables.
.PHONY: install-strip
install-strip: install
	$(STRIP) '$(call SHESCAPE,$(DESTDIR)$(datarootdir))/$(PACKAGE_TARNAME)'/"$$(basename '$(OUTPUT)')"
###############################################################################
# Uninstall previously installed files and executables.
.PHONY: uninstall
uninstall:
	rm '$(call SHESCAPE,$(DESTDIR)$(datarootdir))/$(PACKAGE_TARNAME)/$(OUTPUT)'
	rm '$(call SHESCAPE,$(DESTDIR)$(infodir))/ironclad.info'
